@using Online_Book_Store.ViewModels.Admin
@model BookCatAuthPubsVM

<div class="admin-container">
	<div class="page-header">
		<h1 class="page-title">Create New Book</h1>
		<a class="btn btn-back" asp-area="Admin" asp-controller="Book" asp-action="Index">
			Back to Books
		</a>
	</div>

	<div class="create-form-container">
		<form asp-action="Create" method="post" enctype="multipart/form-data">
			<div class="form-group mb-3">
				<label for="Name">Name</label>
				<input type="text" id="Name" name="Book.Name" class="form-control" placeholder="Enter book name" value="@Model.Book.Name" required>
				<span style="color:red" asp-validation-for="Book.Name"></span>
			</div>

			<div class="form-group mb-3">
				<label for="Price">Price</label>
				<input type="number" id="Price" name="Book.Price" class="form-control" placeholder="Enter book price" min="1" value="@Model.Book.Price"
					   step="0.01"
					   required
					   oninput="validity.valid||(value='');">
				<span style="color:red" asp-validation-for="Book.Price"></span>
			</div>

			<!--Images-->
			<div class="form-group mb-3">
				<label>Upload Images</label>
				<input type="file" class="form-control" accept="image/*" id="files" name="files" multiple>
			</div>

			<!--Videos-->
			<div class="form-group mb-3">
				<label>Upload Videos</label>
				<input type="file" class="form-control" accept="video/*" id="files" name="files" multiple>
			</div>

			<div class="form-group mb-3">
				<label for="AvailableCopies">No. Available Copies</label>
				<input type="number" id="AvailableCopies" name="Book.AvailableCopies" value="@Model.Book.AvailableCopies" class="form-control" placeholder="Enter No. Available Copies" min="0" required oninput="validity.valid||(value='');">
				<span style="color:red" asp-validation-for="Book.AvailableCopies"></span>
			</div>

			<div class="form-group mb-3">
				<label for="CategoryId">Category</label>
				<select name="Book.CategoryId" class="form-control" required>
					@foreach (var cat in Model.Categories)
					{
						if (Model.Book.CategoryId == cat.Id)
						{
							<option value="@cat.Id" selected>@cat.Name</option>
						}
						else
						{
							<option value="@cat.Id">@cat.Name</option>
						}
					}
				</select>
			</div>

			<div class="form-group mb-3">
				<label for="AuthorsIds">Select Authors:</label>
				<select name="AuthorsIds" id="AuthorsIds" multiple class="multi-select" style="width:100%" required>
					@foreach (var bookauth in Model.Book.Authors)
					{
						<option value="@bookauth.Id" selected>@bookauth.Name</option>
					}
					@foreach (var auth in Model.Authors)
					{
						if (Model.Book.Authors.Count == 0)
						{
							<option value="@auth.Id">@auth.Name</option>
						}
						else
						{
							int counter = 0;
							foreach (var bookauth in Model.Book.Authors)
							{
								if (bookauth.Id != auth.Id)
								{
									counter++;
								}
							}
							if (counter == Model.Book.Authors.Count)
							{
								<option value="@auth.Id">@auth.Name</option>
							}
						}
					}
				</select>
			</div>

			<div class="form-group mb-3">
				<label for="PublishersIds">Select Publishing Houses:</label>
				<select name="PublishersIds" id="PublishersIds" multiple class="multi-select" style="width:100%" required>
					@foreach (var bookpub in Model.Book.PublishingHouses)
					{
						<option value="@bookpub.Id" selected>@bookpub.Name</option>
					}
					@foreach (var pub in Model.PublishingHouses)
					{
						if (Model.Book.PublishingHouses.Count == 0)
						{
							<option value="@pub.Id">@pub.Name</option>
						}
						else
						{
							int counter = 0;
							foreach (var bookpub in Model.Book.PublishingHouses)
							{
								if (bookpub.Id != pub.Id)
								{
									counter++;
								}
							}
							if (counter == Model.Book.PublishingHouses.Count)
							{
								<option value="@pub.Id">@pub.Name</option>
							}
						}
					}
				</select>
			</div>

			<div class="form-actions">
				<button type="reset" class="btn btn-cancel">
					Reset
				</button>
				<button type="submit" class="btn btn-create">
					Create Book
				</button>
			</div>
		</form>
	</div>
</div>
@section Scripts {
	<script>
		//Selecting Multiple Authors & Publishers
		$(document).ready(function() {
			$('.multi-select').select2();
		});

		// DOMContentLoaded handler
		document.addEventListener('DOMContentLoaded', function() {
			// Fix: Use existing elements only
			const nameInput = document.getElementById('Name');
			const form = document.querySelector('form');
			if (form && nameInput) {
				form.addEventListener('submit', function(e) {
					if (!nameInput.value.trim()) {
						e.preventDefault();
						nameInput.focus();
						alert('Book name is required');
					}
				});
			}

			// Function to validate positive numbers
			const setupPositiveNumberValidation = (elementId) => {
				const input = document.getElementById(elementId);
				if (input) {
					// Validate on change
					input.addEventListener('change', function() {
						if (parseFloat(this.value) < 0) {
							this.value = '';
							alert('Please enter a positive number');
						}
					});
					// Prevent typing negative values
					input.addEventListener('keydown', function(e) {
						if (e.key === '-' || e.key === 'e' || e.key === 'E') {
							e.preventDefault();
						}
					});
				}
			};
			// Set up validation for both fields
			setupPositiveNumberValidation('Price');
			setupPositiveNumberValidation('AvailableCopies');
		});
	</script>
}
