@model IEnumerable<Book>

@{
    ViewData["Title"] = "Book Management";
}

<div class="admin-container">
    <div class="page-header">
        <h1 class="page-title">Books</h1>
        <a class="btn btn-create" asp-area="Admin" asp-controller="Book" asp-action="Create">
            Create Book
        </a>
    </div>

    <div class="item-container">
        <!-- Search and Filter Section -->
        <div class="search-container">
            <div class="search-box">
                <i class="fas fa-search"></i>
                <input type="text" id="searchInput" placeholder="Search books...">
            </div>
            <button class="btn filter-btn">
                <i class="fas fa-filter me-2"></i>Filter
            </button>
        </div>

        <!-- Books List -->
        <div class="item-list">
            @if(Model.Count()==0)
            {
                <div class="empty-state">
                    <i class="fas fa-inbox"></i>
                    <h3>No Books Found</h3>
                    <p>You haven't created any books yet. Start by adding your first book to organize your books.</p>
                </div>
            }
            else
            {
                @foreach (var book in Model)
                {
                    <div class="item-card">
                        <div class="item-info">
                            <div class="item-icon bg-primary">
                                <i class="fas fa-book"></i>
                            </div>
                            <div class="item-details">
                                <h3 class="item-name">@book.Name</h3>
                                <div class="item-stats">
                                    <span><i class="fas fa-book me-1"></i> @book.Authors.Count authors</span>
                                </div>
                            </div>
                        </div>
                        <div class="item-actions">
                            <a class="btn btn-action btn-edit" asp-area="Admin" asp-controller="Book" asp-action="Edit" asp-route-id="@book.Id">
                                <i class="fas fa-edit me-1"></i>Edit
                            </a>
                            <a class="btn btn-action btn-delete"
                               asp-area="Admin"
                               asp-controller="Book"
                               asp-action="Delete"
                               asp-route-id="@book.Id"
                               data-name="@book.Name">
                                <i class="fas fa-trash me-1"></i>Delete
                            </a>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Delete buttons with confirmation
            const deleteButtons = document.querySelectorAll(".btn-delete");

            deleteButtons.forEach(button => {
                button.addEventListener("click", function(e) {
                    e.preventDefault(); // Prevent the default link navigation

                    const deleteUrl = this.getAttribute("href");
                    const bookName = this.getAttribute("data-name");
                    const bookCard = this.closest('.item-card');

                    // Show confirmation dialog
                    Swal.fire({
                        title: 'Are you sure?',
                        text: `You are about to delete the "${bookName}" book. This action cannot be undone.`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'Cancel',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Visual feedback
                            bookCard.classList.add('deleting');

                            // Change button to show loading state
                            this.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i> Deleting...';
                            this.disabled = true;

                            // Simulate API delay (remove in production)
                            setTimeout(() => {
                                // Redirect to delete URL
                                window.location.href = deleteUrl;
                            }, 1500);
                        }
                    });
                });
            });

            // Search functionality
            const searchInput = document.getElementById('searchInput');
            if (searchInput) {
                searchInput.addEventListener('input', function() {
                    const searchTerm = this.value.toLowerCase();
                    const books = document.querySelectorAll('.item-card');

                    books.forEach(book => {
                        const name = book.querySelector('.item-name').textContent.toLowerCase();
                        if (name.includes(searchTerm)) {
                            book.style.display = 'flex';
                        } else {
                            book.style.display = 'none';
                        }
                    });
                });
            }

            // Alert function
            function showAlert(message, type) {
                // Remove any existing alerts
                const existingAlert = document.querySelector('.alert-message');
                if (existingAlert) existingAlert.remove();

                // Create alert element
                const alert = document.createElement('div');
                alert.className = `alert-message alert-${type}`;
                alert.innerHTML = `
                    <div>${message}</div>
                    <button class="close-alert">&times;</button>
                `;

                // Add to top of page
                document.querySelector('.admin-container').prepend(alert);

                // Auto remove after 3 seconds
                setTimeout(() => {
                    alert.style.opacity = '0';
                    setTimeout(() => alert.remove(), 300);
                }, 3000);

                // Close button
                alert.querySelector('.close-alert').addEventListener('click', () => {
                    alert.remove();
                });
            }
        });
    </script>
}
