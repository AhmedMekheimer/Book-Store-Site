@model Author
<div class="admin-container">
	<div class="page-header">
		<h1 class="page-title">Edit New Author</h1>
		<a class="btn btn-back" asp-area="Admin" asp-controller="Author" asp-action="Index">
			<i class="fas fa-arrow-left me-2"></i>Back to Authors
		</a>
	</div>

	<div class="create-form-container">
		<form asp-action="Edit" method="post">
			<div class="form-group">
				<label for="Name">Author Name</label>
				<input value="@Model.Name" type="text" id="Name" name="Name" class="form-control" placeholder="Enter author name" required>
			</div>

			<div class="form-group">
				<label for="Picture">Image URL</label>
				<input value="@Model.Picture" type="text" id="Picture" name="Picture" class="form-control" placeholder="https://example.com/image.jpg">
				<div class="form-hint">Link to author image (optional)</div>
				<div class="image-preview mt-2" id="imagePreview">
					<div class="preview-text">Image preview will appear here</div>
				</div>
			</div>

			<div class="form-group">
				<label for="Bio">Bio</label>
				<textarea id="Bio" name="Bio" class="form-control" rows="4" placeholder="Enter author bio">@Model.Bio</textarea>
			</div>

			<!-- Social Media Links -->
			<div class="form-section">
				<h3>Social Media Links</h3>
				<div class="form-group">
					<label>Add social media profiles</label>
					<div id="socialMediasContainer">
						@for (int i = 0; i < Model.SocialMedias.Count; i++)
						{
							<div class="input-group mb-2">
								<input type="text" name="SocialMedias" class="form-control"
									   value="@Model.SocialMedias[i]"
									   placeholder="https://example.com/username" required>
								<button type="button" class="btn btn-remove"
								@(Model.SocialMedias.Count == 1 ? "disabled" : "")>
									<i class="fas fa-times"></i>
								</button>
							</div>
						}
					</div>
					<button type="button" id="addSocialMedia" class="btn btn-add">
						<i class="fas fa-plus me-2"></i>Add Another Link
					</button>
				</div>
			</div>
			<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

			<div class="form-actions">
				<button type="reset" class="btn btn-cancel">
					<i class="fas fa-times me-2"></i>Reset
				</button>
				<button type="submit" class="btn btn-create">
					<i class="fas fa-plus me-2"></i>Save Changes
				</button>
			</div>
		</form>

		<div class="form-preview">
			<h3>Preview</h3>
			<div class="preview-card">
				<div class="preview-icon" id="previewIcon">
					<i class="fas fa-book"></i>
				</div>
				<div class="preview-details">
					<h4 id="previewName">Author Name</h4>
					<p id="previewBio">Bio will appear here</p>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // --- Social Media Fields Management ---
            const container = document.getElementById('socialMediasContainer');
            const addButton = document.getElementById('addSocialMedia');

            if (container && addButton) {
                // Function to update remove buttons state
                function updateRemoveButtons() {
                    const groups = container.querySelectorAll('.input-group');
                    groups.forEach(group => {
                        const removeBtn = group.querySelector('.btn-remove');
                        removeBtn.disabled = groups.length === 1;
                    });
                }

                // Function to remove a field group
                function removeFieldGroup(group) {
                    container.removeChild(group);
                    updateRemoveButtons();
                }

                // Add new social media field
                addButton.addEventListener('click', function() {
                    const newGroup = document.createElement('div');
                    newGroup.className = 'input-group mb-2';

                    newGroup.innerHTML = `
                        <input type="text" name="SocialMedias" class="form-control" placeholder="https://example.com/username" required>
                        <button type="button" class="btn btn-remove">
                            <i class="fas fa-times"></i>
                        </button>
                    `;

                    container.appendChild(newGroup);

                    // Add event to the new remove button
                    newGroup.querySelector('.btn-remove').addEventListener('click', function() {
                        removeFieldGroup(newGroup);
                    });

                    updateRemoveButtons();
                });

                // Add event to existing remove buttons
                container.querySelectorAll('.btn-remove').forEach(button => {
                    button.addEventListener('click', function() {
                        const group = this.closest('.input-group');
                        removeFieldGroup(group);
                    });
                });

                // Initialize button states
                updateRemoveButtons();
            }

            // --- Preview Functionality (Only if elements exist) ---
            const nameInput = document.getElementById('Name');
            const previewName = document.getElementById('previewName');

            if (nameInput && previewName) {
                nameInput.addEventListener('input', function() {
                    previewName.textContent = this.value || 'Author Name';
                });
            }

            const descInput = document.getElementById('Bio');
            const previewDesc = document.getElementById('previewBio');

            if (descInput && previewDesc) {
                descInput.addEventListener('input', function() {
                    previewDesc.textContent = this.value || 'Bio will appear here';
                });
            }

            const imageInput = document.getElementById('Picture');
            const imagePreview = document.getElementById('imagePreview');

            if (imageInput && imagePreview) {
                imageInput.addEventListener('input', function() {
                    const url = this.value.trim();

                    if (url) {
                        imagePreview.innerHTML = `<img src="${url}" alt="Preview" onerror="this.style.display='none'">`;
                        if (imagePreview.querySelector('.preview-text')) {
                            imagePreview.querySelector('.preview-text').style.display = 'none';
                        }
                    } else {
                        imagePreview.innerHTML = '<div class="preview-text">Image preview will appear here</div>';
                    }
                });
            }

            // Form validation
            const form = document.querySelector('form');
            if (form) {
                form.addEventListener('submit', function(e) {
                    if (!nameInput?.value.trim()) {
                        e.preventDefault();
                        nameInput.focus();
                        alert('Author name is required');
                        return false;
                    }

                    // Validate social media links
                    const socialInputs = container.querySelectorAll('input[name="SocialMedias"]');
                    let hasValue = false;

                    socialInputs.forEach(input => {
                        if (input.value.trim()) {
                            hasValue = true;
                        }
                    });

                    if (!hasValue) {
                        e.preventDefault();
                        alert('Please add at least one social media link');
                        return false;
                    }

                    return true;
                });
            }
        });
    </script>
}