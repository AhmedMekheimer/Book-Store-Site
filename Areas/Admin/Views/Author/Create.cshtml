@model Author

<div class="admin-container">
	<div class="page-header">
		<h1 class="page-title">Create New Author</h1>
		<a class="btn btn-back" asp-area="Admin" asp-controller="Author" asp-action="Index">
			Back to Authors
		</a>
	</div>

	<div class="create-form-container">
		<form asp-action="Create" method="post" enctype="multipart/form-data">
			<div class="form-group">
				<input type="hidden" name="id" value="@Model.Id" />
			</div>

			<div class="form-group">
				<label for="Name">Author Name</label>
				<input type="text" id="Name" name="Name" value="@Model.Name" class="form-control" placeholder="Enter author name" required>
				<span style="color:red" style="color:red" class="text-danger" asp-validation-for="Name"></span>
			</div>

			<!--Images-->
			<div class="form-group mb-3">
				<label>Upload Image</label>
				<input type="file" class="form-control" accept="image/*" id="file" name="file" required>
			</div>

			<div class="form-group">
				<label for="Bio">Bio</label>
				<textarea id="Bio" name="Bio" class="form-control" rows="4" placeholder="Enter author bio">@Model.Bio</textarea>
				<span style="color:red" style="color:red" class="text-danger" asp-validation-for="Bio"></span>
			</div>

			<!-- Social Media Links -->
			<div class="form-section">
				<h3>Social Media Links</h3>
				<div class="form-group">
					<label>Add social media profiles</label>
					<div id="socialMediasContainer">
						@for (int i = 0; i < Model.SocialMedias.Count; i++)
						{
							<div class="input-group mb-2">
								<input type="text" name="SocialMedias" class="form-control"
									   value="@Model.SocialMedias[i]"
									   placeholder="https://example.com/username" required>
								<button type="button" class="btn btn-remove"
								@(Model.SocialMedias.Count == 1 ? "disabled" : "")>
									<i class="fas fa-times"></i>
								</button>
							</div>
						}
					</div>
					<button type="button" id="addSocialMedia" class="btn btn-add">
						Add Another Link
					</button>
				</div>
			</div>
			<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

			<div class="form-actions">
				<button type="reset" class="btn btn-cancel">
					Reset
				</button>
				<button type="submit" class="btn btn-create">
					Create Author
				</button>
			</div>
		</form>
	</div>
</div>
@section Scripts {
	<script>
		document.addEventListener('DOMContentLoaded', function() {
						const container = document.getElementById('socialMediasContainer');
			const addButton = document.getElementById('addSocialMedia');

			// Add new social media field
			addButton.addEventListener('click', function() {
				const newGroup = document.createElement('div');
				newGroup.className = 'input-group mb-2';

				// When creating new input groups:
				newGroup.innerHTML = `
					<input type="text" name="SocialMedias" class="form-control" placeholder="https://facebook.com/username" required>
					<button type="button" class="btn btn-remove">
						<i class="fas fa-times"></i>
					</button>
				`;

				container.appendChild(newGroup);

				// Enable remove button for the first field if we have multiple
				if (container.children.length > 1) {
					container.children[0].querySelector('.btn-remove').disabled = false;
				}

				// Add event to new remove button
				newGroup.querySelector('.btn-remove').addEventListener('click', function() {
					container.removeChild(newGroup);

					// If only one field remains, disable its remove button
					if (container.children.length === 1) {
						container.children[0].querySelector('.btn-remove').disabled = true;
					}
				});
			});

			// Add event to initial remove button
			const initialRemoveBtn = container.querySelector('.btn-remove');
			initialRemoveBtn.addEventListener('click', function() {
				// Only allow removal if there are multiple fields
				if (container.children.length > 1) {
					container.removeChild(container.children[0]);

					// If only one remains, disable its remove button
					if (container.children.length === 1) {
						container.children[0].querySelector('.btn-remove').disabled = true;
					}
				}
			});

			// Client-Side Validation
			const form = document.querySelector('form');

			form.addEventListener('submit', function(e) {
				if (!nameInput.value.trim()) {
					e.preventDefault();
					nameInput.focus();
					alert('Author name is required');
				}
			});
		});
	</script>
}
